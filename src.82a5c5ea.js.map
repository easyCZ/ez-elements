{"version":3,"sources":["../src/EZElement.ts","../src/ez.ts","../src/EZDiv.ts","../src/EZSpan.ts","../src/index.ts","../src/EZButton.ts","../src/EZTextInput.ts","../src/InternalShadow.ts","../src/EZShadowElement.ts","../src/extractStyleContents.ts","src/shadow-example/list/FilterableStaticList.ts","src/shadow-example/list/ShadowListChild.ts","src/shadow-example/ShadowExample.ts","src/shared/StatusElement.ts","src/button-example/ButtonExample.ts","../src/JSX.ts","src/jsx-example/JSXExample.tsx","src/ez-button-example/EZButtonExample.ts","src/ez-button-subclass-example/ToggleIconTextButton.ts","src/ez-button-subclass-example/EZButtonSubclassExample.ts","src/ez-textinput-example/EZTextInputExample.ts","src/basic-ezelements/BasicEZElementsExample.ts","src/index.tsx"],"names":[],"mappings":"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","file":"src.82a5c5ea.js","sourceRoot":"..","sourcesContent":["/** @internal */\nexport type NativeElement = keyof HTMLElementTagNameMap;\n\n/** @internal */\nexport type AnyEZElement = EZElement<NativeElement>;\n\ntype Appendable =\n  | AppendableArray\n  | { element: HTMLElement }\n  | AnyEZElement\n  | HTMLElement\n  | string;\n\ninterface AppendableArray extends Array<Appendable> {}\n\n/** @internal */\nexport class EZElement<K extends NativeElement> {\n  private element: HTMLElementTagNameMap[K];\n\n  // By default any child elements will be added to the element itself.\n  // Having a separate reference to the child container allows overriding\n  // this behaviour and creating a \"holder\".\n  private childContainer: DocumentFragment | HTMLElement;\n\n  constructor(arg: K | HTMLElementTagNameMap[K]) {\n    if (typeof arg === 'string') {\n      this.element = document.createElement(arg);\n    } else {\n      this.element = arg as HTMLElementTagNameMap[K];\n    }\n    this.childContainer = this.element;\n\n    this.setAttribute('data-class-name', this.constructor.name);\n  }\n\n  //region Meta\n  public getNativeElement(): HTMLElementTagNameMap[K] {\n    return this.element;\n  }\n\n  public getChildContainer(): DocumentFragment | HTMLElement {\n    return this.childContainer;\n  }\n\n  public static unwrapEZElement(el: AnyEZElement | HTMLElement): HTMLElement {\n    if (EZElement.isEZElement(el)) {\n      return el.getNativeElement();\n    }\n    return el;\n  }\n\n  // @ts-ignore - used in internal runtime type check\n  private isEZElement(): boolean {\n    return true;\n  }\n\n  public static isEZElement(el: any): el is AnyEZElement {\n    return Boolean(\n      el &&\n        el.__proto__ &&\n        el.__proto__.isEZElement &&\n        el.__proto__.isEZElement()\n    );\n  }\n\n  //endregion\n\n  //region Override Child Container\n  public setChildContainer(\n    childContainer: DocumentFragment | HTMLElement\n  ): this {\n    if (\n      !(\n        childContainer instanceof DocumentFragment ||\n        childContainer instanceof HTMLElement\n      )\n    ) {\n      throw new Error(\n        'child container must be a DocumentFragment or a HTMLElement'\n      );\n    }\n    this.childContainer = childContainer;\n    return this;\n  }\n\n  //endregion\n\n  //region Child diffing\n  public applyChildren(\n    wrappedChildren: Array<\n      AnyEZElement | HTMLElement | { element: HTMLElement } | string\n    >\n  ): this {\n    const nativeElement = this.childContainer;\n    const children = wrappedChildren.map(EZElement.toAppendable);\n    const childrenSet = new Set(children);\n\n    // Determine which of the desired children are not yet in the element and add them to a\n    // fragment that will be appended in a single operation.\n    const existingElementChildren = new Set(\n      Array.from(nativeElement.childNodes)\n    );\n    const notYetPresentChildren = children.filter(child => {\n      return !existingElementChildren.has(child);\n    });\n    const frag = document.createDocumentFragment();\n    frag.append(...notYetPresentChildren);\n    nativeElement.prepend(frag);\n\n    // Determine which of the existing children are not in the desired state of the element.\n    const existingChildren = Array.from(nativeElement.childNodes);\n    const removingChildren = existingChildren.filter(\n      child => !childrenSet.has(child as HTMLElement)\n    );\n\n    // Add the children that should be removed from the element to\n    // a new fragment (which removes them from the existing element)\n    document.createDocumentFragment().append(...removingChildren);\n\n    // Avoid the unintended side-effect of the removed children\n    // being part of the unattached document fragment\n    for (const child of removingChildren) {\n      child.remove();\n    }\n\n    let previousChild: ChildNode | null = null;\n    let nextChild = nativeElement.firstChild;\n    // enforce the order that the children were passed with\n    for (let i = 0; i < children.length; i++) {\n      const expectedNode = children[i];\n      if (expectedNode !== nextChild) {\n        if (previousChild === null) {\n          nativeElement.prepend(expectedNode);\n        } else {\n          previousChild.after(expectedNode);\n        }\n      }\n      previousChild = expectedNode;\n      nextChild = expectedNode.nextSibling;\n    }\n\n    return this;\n  }\n\n  //endregion\n\n  //region append/prepend\n  public append(...children: AppendableArray): this {\n    for (const child of children) {\n      if (Array.isArray(child)) {\n        this.append(...child);\n      } else {\n        this.childContainer.append(EZElement.toAppendable(child));\n      }\n    }\n    return this;\n  }\n\n  public prepend(...children: AppendableArray): this {\n    for (const child of children.reverse()) {\n      if (Array.isArray(child)) {\n        this.prepend(...child);\n      } else {\n        this.childContainer.prepend(EZElement.toAppendable(child));\n      }\n    }\n    return this;\n  }\n\n  //endregion\n\n  //region placement\n  public appendTo(parent: AnyEZElement | HTMLElement): this {\n    parent.append(this.element);\n    return this;\n  }\n\n  public prependTo(parent: AnyEZElement | HTMLElement): this {\n    parent.prepend(this.element);\n    return this;\n  }\n\n  public replaceWith(other: AnyEZElement | HTMLElement): this {\n    this.element.replaceWith(EZElement.unwrapEZElement(other));\n    return this;\n  }\n\n  public removeFromParent(): this {\n    const parent = this.element.parentNode;\n    if (parent) {\n      parent.removeChild(this.element);\n    }\n    return this;\n  }\n\n  //endregion\n\n  //region Parent\n  public getParent(): Node & ParentNode | null {\n    return this.element.parentNode;\n  }\n\n  //endregion\n\n  //region Children\n  public getChild(index: number): ChildNode | null {\n    return this.childContainer.childNodes[index] || null;\n  }\n\n  public getChildren(): Array<ChildNode> {\n    return Array.from(this.childContainer.childNodes);\n  }\n\n  public contains(node: Node | AnyEZElement | null): boolean {\n    if (EZElement.isEZElement(node)) {\n      return this.element.contains(node.element);\n    }\n    return this.element.contains(node);\n  }\n\n  //endregion\n\n  //region Classes\n  public addClass(...classNames: Array<string>): this {\n    this.element.classList.add(...classNames);\n    return this;\n  }\n\n  public setClasses(classObj: { [key: string]: boolean }): this {\n    Object.entries(classObj).forEach(([className, enabled]) => {\n      if (enabled) {\n        this.addClass(className);\n      } else {\n        this.removeClass(className);\n      }\n    });\n    return this;\n  }\n\n  public removeClass(...classNames: Array<string>): this {\n    this.element.classList.remove(...classNames);\n    return this;\n  }\n\n  public get classList(): DOMTokenList {\n    return this.element.classList;\n  }\n\n  //endregion\n\n  //region Style\n  public addStyles(styles: Partial<CSSStyleDeclaration>): this {\n    Object.assign(this.style, styles);\n    return this;\n  }\n\n  public get style(): CSSStyleDeclaration {\n    return this.element.style;\n  }\n\n  //endregion\n\n  //region Attributes\n  public addAttributes(attributes: { [key: string]: string }): this {\n    Object.entries(attributes).forEach(([key, value]) => {\n      this.setAttribute(key, value);\n    });\n    return this;\n  }\n\n  public setAttribute(attrName: string, val: string): this {\n    this.element.setAttribute(attrName, val);\n    return this;\n  }\n\n  public removeAttribute(attrName: string): this {\n    this.element.removeAttribute(attrName);\n    return this;\n  }\n\n  public get attributes(): NamedNodeMap {\n    return this.element.attributes;\n  }\n\n  public getAttribute(attrName: string): string | null {\n    return this.element.getAttribute(attrName);\n  }\n\n  //endregion\n\n  //region Events\n  public addEventListener<K extends keyof HTMLElementEventMap>(\n    type: K,\n    listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions\n  ): this {\n    this.element.addEventListener(type, listener, options);\n    return this;\n  }\n\n  public removeEventListener<K extends keyof HTMLElementEventMap>(\n    type: K,\n    listener: (this: HTMLSelectElement, ev: HTMLElementEventMap[K]) => any,\n    options?: boolean | AddEventListenerOptions\n  ): this {\n    this.element.removeEventListener(type, listener, options);\n    return this;\n  }\n\n  public isEventTarget(event: Event): boolean {\n    return event.target === this.element;\n  }\n\n  public containsEventTarget(event: Event): boolean {\n    if (this.isEventTarget(event)) {\n      return true;\n    }\n    return this.contains(event.target as Node | null);\n  }\n\n  public onClick(cb: (event: MouseEvent) => void): this {\n    return this.addEventListener('click', cb);\n  }\n\n  //endregion\n\n  //region TextContent\n  public setTextContent(text: string): this {\n    this.element.textContent = text;\n    return this;\n  }\n\n  public getTextContent(): string | null {\n    return this.element.textContent;\n  }\n\n  //endregion\n\n  private static toAppendable(\n    child: AnyEZElement | HTMLElement | { element: HTMLElement } | string\n  ): Text | HTMLElement {\n    if (EZElement.isEZElement(child)) {\n      return child.element;\n    } else if (child instanceof HTMLElement) {\n      return child;\n    } else if (typeof child === 'string') {\n      return document.createTextNode(child);\n    } else if (child && child.element !== undefined) {\n      return child.element;\n    } else {\n      throw new Error('Unrecognized child argument');\n    }\n  }\n}\n","import { EZElement, NativeElement } from './EZElement';\n\n/** @internal */\n\ntype ClassArg = string | Array<string> | { [key: string]: boolean };\n\nexport function ez<T extends NativeElement>(\n  arg: T | HTMLElementTagNameMap[T] | EZElement<T>,\n  classes?: ClassArg\n): EZElement<T> {\n  let instance: EZElement<T>;\n  if (EZElement.isEZElement(arg)) {\n    instance = arg;\n  } else {\n    instance = new EZElement(arg);\n  }\n  if (classes !== undefined) {\n    if (Array.isArray(classes)) {\n      instance.addClass(...classes);\n    } else if (typeof classes === 'string') {\n      instance.addClass(classes);\n    } else {\n      instance.setClasses(classes);\n    }\n  }\n  return instance;\n}\n","import { EZElement } from './EZElement';\n\n/** @internal */\nexport class EZDiv extends EZElement<'div'> {\n  constructor() {\n    super('div');\n  }\n}\n","import { EZElement } from './EZElement';\n\n/** @internal */\nexport class EZSpan extends EZElement<'span'> {\n  constructor() {\n    super('span');\n  }\n}\n","export * from './ez';\nexport * from './EZElement';\nexport { EZDiv } from './EZDiv';\nexport { EZSpan } from './EZSpan';\n","import { EZElement } from '@ez-elements/core';\n\n/** @internal */\nexport class EZButton extends EZElement<'button'> {\n  constructor(cb: () => void) {\n    super('button');\n    this.onClick(cb);\n  }\n\n  disable() {\n    this.setAttribute('disabled', 'disabled');\n    return this;\n  }\n\n  enable() {\n    this.removeAttribute('disabled');\n    return this;\n  }\n}\n","import { EZElement } from '@ez-elements/core';\n\n/** @internal */\nexport class EZTextInput extends EZElement<'input'> {\n  constructor(cb: (value: string) => void) {\n    super('input');\n\n    this.setAttribute('type', 'text').addEventListener('input', () => {\n      cb(this.getValue());\n    });\n  }\n\n  public getValue(): string {\n    return this.getNativeElement().value;\n  }\n\n  public setValue(value: string, callChangedCallback: boolean = true): this {\n    this.getNativeElement().value = value;\n    if (callChangedCallback) {\n      this.getNativeElement().dispatchEvent(new Event('input'));\n    }\n    return this;\n  }\n}\n","export interface ShadowLifeCycleListener {\n  connected(): void;\n  disconnected(): void;\n}\n\n// Use a subclass of HTMLElement as the root element to capture lifecycle callbacks.\n// To avoid common issues with transpilers erasing class / new keywords that are\n// required for standard web component usage, use Reflect.construct and direct\n// prototype definition.\nfunction InternalShadowImpl() {\n  const instance = Reflect.construct(\n    HTMLElement,\n    [],\n    this.__proto__.constructor\n  );\n  instance.root = instance.attachShadow({ mode: 'open' });\n  instance.append(instance.root);\n  return instance;\n}\nInternalShadowImpl.prototype.setLifeCycleListener = function(\n  lifecycleListener: ShadowLifeCycleListener\n) {\n  this.lifecycleListener = lifecycleListener;\n  return this;\n};\nInternalShadowImpl.prototype.getShadowRoot = function() {\n  return this.root;\n};\nInternalShadowImpl.prototype.connectedCallback = function() {\n  this.lifecycleListener.connected();\n};\nInternalShadowImpl.prototype.disconnectedCallback = function() {\n  this.lifecycleListener.disconnected();\n};\nObject.setPrototypeOf(InternalShadowImpl.prototype, HTMLElement.prototype);\nObject.setPrototypeOf(InternalShadowImpl, HTMLElement);\n\ndeclare class IInternalShadow extends HTMLElement {\n  constructor();\n  setLifeCycleListener(lifecycleListener: ShadowLifeCycleListener): this;\n  getShadowRoot(): ShadowRoot;\n}\n\ninterface InternalShadowClass {\n  new (): IInternalShadow;\n}\n\nexport const InternalShadow = (InternalShadowImpl as unknown) as InternalShadowClass;\nexport type InternalShadow = IInternalShadow;\n\nconst global = Function('return this')();\n\n// A tag is required for a custom HTMLElement. If the element is not registered then the instance will not be\n// constructable. If the customElements global is not defined then only throw the error if a construction is attempted\nexport let didRegisterCustomElement = false;\nif (global.customElements) {\n  // The internal shadow element will be visible as 'ez-shadow' in the DOM\n  global.customElements.define('ez-shadow', InternalShadow);\n  didRegisterCustomElement = true;\n}\n","import { EZElement, NativeElement } from '@ez-elements/core';\nimport { didRegisterCustomElement, InternalShadow } from './InternalShadow';\n\n/** @internal */\nexport class EZShadowElement<K extends NativeElement> extends EZElement<keyof HTMLElementTagNameMap> {\n  private styleElement: HTMLStyleElement;\n  private onConnectedCallbacks: Array<() => void> = [];\n  private onDisconnectedCallbacks: Array<() => void> = [];\n\n  constructor(type: K) {\n    super(new InternalShadow());\n\n    const element = this.getNativeElement() as InternalShadow;\n    element.setLifeCycleListener({\n      connected: () => {\n        this.connected();\n      },\n      disconnected: () => {\n        this.disconnected();\n      }\n    });\n    const shadowRoot = element.getShadowRoot();\n\n    this.styleElement = document.createElement('style');\n    shadowRoot.append(this.styleElement);\n\n    const container = new EZElement(type);\n    const containerElement = container.getNativeElement();\n    shadowRoot.append(containerElement);\n\n    this.setChildContainer(containerElement);\n  }\n\n  public onConnected(cb: () => void): this {\n    this.onConnectedCallbacks.push(cb);\n    return this;\n  }\n\n  public onDisconnected(cb: () => void): this {\n    this.onDisconnectedCallbacks.push(cb);\n    return this;\n  }\n\n  public setShadowStyle(styleContents: string): this {\n    this.styleElement.innerHTML = styleContents;\n    return this;\n  }\n\n  private connected() {\n    this.onConnectedCallbacks.forEach(cb => {\n      cb();\n    });\n  }\n\n  private disconnected() {\n    this.onDisconnectedCallbacks.forEach(cb => {\n      cb();\n    });\n  }\n}\n\nif (!didRegisterCustomElement) {\n  module.exports = {\n    EZShadowElement: function() {\n      throw new Error('customElements was not available so the custom element used by EZShadowElement cannot be constructed. This can occur if the environment does not support custom elements (either an old browser or a test environment that does not include support for custom elements');\n    },\n  };\n}","/** @internal */\nexport function extractStyleContents(html: string): string {\n  const sheet = document.createElement('div');\n  sheet.innerHTML = html;\n  return sheet.childNodes[0].textContent!;\n}\n","import { AnyEZElement, ez, EZDiv } from '@ez-elements/core';\nimport { EZButton, EZTextInput } from '@ez-elements/inputs';\nimport { extractStyleContents, EZShadowElement } from '@ez-elements/shadow';\n\nconst textInputClassName = 'text-input';\nconst holderClassName = 'holder';\n\n// Use a style tag to enable IDE-highlighting - the css string must be without the tag so it is stripped\n// using extractStyleContents.\nconst css = extractStyleContents(`<style>\n  :host {\n    border: 1px solid blue;\n    background-color: orange;\n    display: block;\n  }\n  .${textInputClassName} {\n    margin: 10px;\n    padding: 5px;\n    color: orange;\n  }\n  .${holderClassName} {\n    padding: 10px;\n  }\n</style>`);\n\nexport type ListChild = AnyEZElement & {\n  getQueryText: () => string;\n};\n\nexport class FilterableStaticList extends EZShadowElement<'div'> {\n  private input: EZTextInput;\n  private holder: EZDiv;\n  private children: Array<ListChild> = [];\n  private filter: string = '';\n\n  constructor() {\n    super('div');\n\n    this.setShadowStyle(css).append(\n      ez('div').append(\n        new EZButton(() => {\n          this.input.setValue('1');\n        }).setTextContent('Set to \"1\"'),\n        new EZButton(() => {\n          this.input.setValue('2');\n        }).setTextContent('Set to \"2\"')\n      ),\n\n      (this.input = new EZTextInput(value => {\n        this.applyFilter(value);\n      }).addClass(textInputClassName)),\n\n      (this.holder = new EZDiv().addClass(holderClassName))\n    );\n  }\n\n  public setChildren(children: Array<ListChild>): this {\n    this.children = children;\n    this.applyFilter(this.filter);\n    return this;\n  }\n\n  private applyFilter(filter: string) {\n    this.filter = filter;\n    const lowercaseFilter = filter.toLowerCase();\n    const filteredChildren = this.children.filter((child: ListChild) => {\n      return (\n        child\n          .getQueryText()\n          .toLowerCase()\n          .indexOf(lowercaseFilter) !== -1\n      );\n    });\n\n    this.holder.applyChildren(filteredChildren);\n  }\n}\n","import { ListChild } from './FilterableStaticList';\nimport { EZShadowElement } from '@ez-elements/shadow';\nimport { EZSpan } from '@ez-elements/core';\nimport { extractStyleContents } from '@ez-elements/shadow';\n\nconst css = extractStyleContents(`<style>\n  :host {\n      color: red;\n  }\n</style>`);\n\n// Simple div with a classname from the list implementation class file\nexport class ShadowListChild extends EZShadowElement<'div'>\n  implements ListChild {\n  private text: string;\n  private span: EZSpan;\n  private disconnects: number = 0;\n  private connects: number = 0;\n\n  constructor(text: string) {\n    super('div');\n    this.text = text;\n\n    this.setShadowStyle(css).append((this.span = new EZSpan()));\n\n    this.onConnected(() => {\n      this.connects++;\n      this.render();\n    });\n\n    this.onDisconnected(() => {\n      this.disconnects++;\n      this.render();\n    });\n\n    this.render();\n  }\n\n  getQueryText(): string {\n    return this.text;\n  }\n\n  private render() {\n    this.span.setTextContent(\n      `${this.text} - connects: ${this.connects} - disconnects: ${this.disconnects}`\n    );\n  }\n}\n","import { FilterableStaticList } from './list/FilterableStaticList';\nimport { ShadowListChild } from './list/ShadowListChild';\nimport { ez, EZDiv } from '@ez-elements/core';\n\nexport function ShadowExample(holder: EZDiv) {\n  holder.append(\n    ez('h3').setTextContent('Shadow (WebComponents)'),\n    ez('p').append(\n      'Source shows how to subclass ',\n      ez('code').append('EZShadowElement'),\n      ' to create components that have separate CSS rules and lifecycle callbacks.'\n    ),\n\n    new FilterableStaticList().setChildren(createChildren())\n  );\n}\n\nfunction createChildren() {\n  const children = [];\n  for (let i = 1; i <= 30; i++) {\n    children.push(new ShadowListChild(i.toString(10)));\n  }\n  return children;\n}\n","import { ez, EZDiv } from '@ez-elements/core';\nimport { extractStyleContents, EZShadowElement } from '@ez-elements/shadow';\n\nconst enabledClassName = 'enabled';\nconst style = extractStyleContents(`<style>\n  :host {\n    border: 1px solid black;\n    background-color: red;\n    display: block;\n    padding: 5px;\n  }\n  :host(.${enabledClassName}) {\n    background-color: green;\n    color: white;\n  }\n</style>`);\n\nexport class StatusElement extends EZShadowElement<'div'> {\n  private status: EZDiv;\n\n  constructor(private enabled: boolean = false) {\n    super('div');\n\n    this.setShadowStyle(style)\n      .append((this.status = ez('div')))\n      .render();\n  }\n\n  disable(): this {\n    this.enabled = false;\n    this.render();\n    return this;\n  }\n\n  enable(): this {\n    this.enabled = true;\n    this.render();\n    return this;\n  }\n\n  render(): this {\n    this.status.setTextContent(this.enabled ? 'Enabled' : 'Disabled');\n    this.setClasses({\n      [enabledClassName]: this.enabled\n    });\n    return this;\n  }\n}\n","import { ez, EZDiv } from '@ez-elements/core';\nimport { StatusElement } from '../shared/StatusElement';\n\nexport function ButtonExample(holder: EZDiv) {\n  let statusElement: StatusElement;\n  holder.append(\n    ez('h3').setTextContent('Simple <button/> elements'),\n    ez('p').append(\n      'Source shows how to create ',\n      ez('code').append('<button/>'),\n      ' elements using the ',\n      ez('code').append('ez(\"button\")'),\n      ' function.'\n    ),\n\n    (statusElement = new StatusElement(false)),\n    ez('button')\n      .setTextContent('Enable')\n      .onClick(() => {\n        statusElement.enable();\n      }),\n    ez('button')\n      .setTextContent('Disable')\n      .onClick(() => {\n        statusElement.disable();\n      })\n  );\n}\n","import { AnyEZElement, EZElement } from '@ez-elements/core';\n\ntype Constructable<T, A> = {\n  new (attributes: A): T;\n};\n\ntype JSXChild = { element: HTMLElement } | AnyEZElement | HTMLElement | string;\n\n/** @internal */\nexport class JSX {\n  static createElement<T extends keyof HTMLElementTagNameMap, A extends {}>(\n    arg:\n      | T\n      | ((attributes: A) => T)\n      | Constructable<HTMLElementTagNameMap[T] | EZElement<T>, A>,\n    attributes?: A,\n    ...children: Array<JSXChild>\n  ): EZElement<T> {\n    let el: EZElement<T>;\n    if (typeof arg === 'function') {\n      const constructed = new (arg as any)(attributes);\n      if (EZElement.isEZElement(constructed)) {\n        el = constructed as EZElement<T>;\n      } else {\n        el = new EZElement(constructed);\n      }\n    } else {\n      el = new EZElement(arg);\n      if (attributes !== undefined && attributes !== null) {\n        Object.entries(attributes).forEach(([attrName, attrVal]) => {\n          if (attrName === 'style' && typeof attrVal !== 'string') {\n            el.addStyles(attrVal as Partial<CSSStyleDeclaration>);\n          } else if (attrName === 'onClick') {\n            el.onClick(attrVal as () => void);\n          } else {\n            el.setAttribute(attrName, attrVal as string);\n          }\n        });\n      }\n    }\n    el.append(...children);\n    return el;\n  }\n}\n","import * as EZJSX from '@ez-elements/jsx';\nimport { AnyEZElement, EZDiv, EZElement } from \"@ez-elements/core\";\n\nconst React = EZJSX.JSX;\n\nexport function JSXExample(holder: EZDiv) {\n  const myDiv = new EZElement('div').addStyles({color: 'green'}).setTextContent('myDiv');\n  let clickDiv: AnyEZElement;\n  let explicitDiv;\n  let nestedDiv;\n  let someComplex;\n  let simpleDiv;\n  holder.append(<div>\n    <h3>Various JSX usage</h3>\n    <p>Source shows how JSX can be used to construct and append EZElements</p>\n    <div style={'background-color: red;'}><span>style string div</span></div>\n    <div style={{backgroundColor: 'green'}}>style object div</div>\n    {clickDiv = <div onClick={() => {\n      clickDiv.append(' - clicked')\n    }}>clickDiv</div>}\n    {explicitDiv = React.createElement('div', {style: 'color: red;'})}\n    {simpleDiv = <div className={'some-class'} style={{'color': 'orange'}}>simpleDiv</div>}\n    {myDiv}\n    {nestedDiv = new EZElement('div').addStyles({color: 'blue'}).setTextContent('nestedDiv')}\n    {someComplex = <SomeComplex text={\"foo\"}/>}\n    {SFC({content: 'invoked explicitly'}).addStyles({color: 'violet'})}\n    <SFC content={'as JSX attrs'}/>\n  </div>);\n\n  explicitDiv.setTextContent(\"This was explicitDiv\");\n  simpleDiv.append(\" - simpleDiv.modified\");\n  nestedDiv.append(' - nestedDiv.modified');\n  someComplex.addStyles({color: 'indigo'}).append(' - SomeComplex.modified');\n}\n\nclass SomeComplex extends EZDiv {\n  constructor(props: { text: string }) {\n    super();\n    this.setTextContent(`SomeComplex with text arg: ${props.text}`);\n  }\n}\n\nfunction SFC(props: { content: string }) {\n  return <div>I'm a SFC: {props.content}</div>;\n}\n","import { ez, EZDiv } from '@ez-elements/core';\nimport { EZButton } from '@ez-elements/inputs';\nimport { StatusElement } from '../shared/StatusElement';\n\nexport function EZButtonExample(holder: EZDiv) {\n  let statusElement: StatusElement;\n  holder.append(\n    ez('h3').setTextContent('EZButton instances'),\n    ez('p').append(\n      'Source shows how to use ',\n      ez('code').append('EZButton'),\n      ' instances to create buttons.'\n    ),\n\n    (statusElement = new StatusElement(false)),\n    new EZButton(() => {\n      statusElement.enable();\n    }).append(\n      ez('div').setTextContent('✅'),\n      ez('div').setTextContent('Enable')\n    ),\n\n    new EZButton(() => {\n      statusElement.disable();\n    }).append(\n      ez('div').setTextContent('🔴'),\n      ez('div').setTextContent('Disable')\n    )\n  );\n}\n","import { EZButton } from '@ez-elements/inputs';\nimport { ez, EZElement } from '@ez-elements/core';\n\ntype ToggleIconTextButtonProps = {\n  activeIcon: string;\n  activeText: string;\n  inactiveIcon: string;\n  inactiveText: string;\n};\n\nexport class ToggleIconTextButton extends EZButton {\n  private props: ToggleIconTextButtonProps;\n  private icon: EZElement<'div'>;\n  private text: EZElement<'div'>;\n\n  constructor(\n    props: ToggleIconTextButtonProps,\n    cb: (active: boolean) => void,\n    private active: boolean = false\n  ) {\n    super(() => {\n      this.setActive(!this.active);\n      cb(this.active);\n    });\n    this.props = props;\n\n    this.append((this.icon = ez('div')), (this.text = ez('div')));\n    this.setActive(this.active);\n  }\n\n  setActive(active: boolean) {\n    this.active = active;\n\n    if (this.active) {\n      this.icon.setTextContent(this.props.activeIcon);\n      this.text.setTextContent(this.props.activeText);\n    } else {\n      this.icon.setTextContent(this.props.inactiveIcon);\n      this.text.setTextContent(this.props.inactiveText);\n    }\n  }\n}\n","import { EZDiv } from '@ez-elements/core';\nimport { ToggleIconTextButton } from './ToggleIconTextButton';\nimport { StatusElement } from '../shared/StatusElement';\nimport { ez } from '@ez-elements/core';\n\nexport function EZButtonSubclassExample(holder: EZDiv) {\n  const statusElement = new StatusElement(false);\n\n  holder.append(\n    ez('h3').setTextContent('EZButton Subclass'),\n    ez('p').append(\n      'Source shows how to extend ',\n      ez('code').append('EZButton'),\n      ' to create more complex buttons.'\n    ),\n\n    statusElement,\n    new ToggleIconTextButton(\n      {\n        activeIcon: '👍',\n        activeText: 'Enabled',\n        inactiveIcon: '👎',\n        inactiveText: 'Disabled'\n      },\n      (active: boolean) => {\n        if (active) {\n          statusElement.enable();\n        } else {\n          statusElement.disable();\n        }\n      },\n      false\n    )\n  );\n}\n","import { ez, EZDiv, EZElement } from '@ez-elements/core';\nimport { EZTextInput } from '@ez-elements/inputs';\n\nexport function EZTextInputExample(holder: EZDiv) {\n  let textInput: EZTextInput;\n  let statusElement: EZElement<'div'>;\n  holder.append(\n    ez('h3').setTextContent('EZTextInput'),\n    ez('p').append(\n      'Source shows how to use ',\n      ez('code').append('EZTextInput'),\n      ' instances to create text inputs with callbacks.'\n    ),\n\n    (textInput = new EZTextInput((newValue: string) => {\n      statusElement.setTextContent(`Input value: ${newValue}`);\n    })),\n    (statusElement = ez('div')),\n    ez('button')\n      .setTextContent('Set to \"Foo\"')\n      .onClick(() => {\n        textInput.setValue('Foo');\n      }),\n    ez('button')\n      .setTextContent('Set to \"Bar\" without change callback')\n      .onClick(() => {\n        textInput.setValue('Bar', false);\n      })\n  );\n}\n","import { ez, EZDiv, EZElement, EZSpan } from '@ez-elements/core';\n\nexport function BasicEZElementsExample(holder: EZDiv) {\n  holder.append(\n    ez('h3').setTextContent('Basic EZElements'),\n    ez('p').append(\n      'Source shows how to create elements using ',\n      ez('code').append('new EZElement(tag)'),\n      ', ',\n      ez('code').append('ez(tag)'),\n      ', ',\n      ez('code').append('new EZDiv()'),\n      ', and ',\n      ez('code').append('new EZSpan()')\n    ),\n\n    new EZElement('div').setTextContent(\n      'Constructed using new EZElement(\"div\")'\n    ),\n    ez('div').setTextContent('Constructed using ez(\"div\")'),\n    new EZDiv().setTextContent('Constructed using new EZDiv()'),\n    new EZSpan().setTextContent('Constructed using new EZSpan()'),\n\n    ez('p').setTextContent(\n      'All instances are EZElements so they have convenience functions available for appending/prepending etc.'\n    ),\n\n    new EZElement('div').append(\n      ez('div').append(\n        new EZDiv().append(\n          new EZSpan().setTextContent('span within some nested divs')\n        ),\n        ez('span').setTextContent('You can append EZElements to EZElements'),\n\n        (() => {\n          const e = document.createElement('div');\n          e.textContent = 'As well as regular HTMLElements';\n          return e;\n        })()\n      )\n    )\n  );\n}\n","import { ez, EZDiv } from \"@ez-elements/core\";\nimport { ShadowExample } from \"./shadow-example/ShadowExample\";\nimport { ButtonExample } from \"./button-example/ButtonExample\";\nimport { JSXExample } from \"./jsx-example/JSXExample\";\nimport { EZButtonExample } from \"./ez-button-example/EZButtonExample\";\nimport { EZButtonSubclassExample } from \"./ez-button-subclass-example/EZButtonSubclassExample\";\nimport { EZTextInputExample } from \"./ez-textinput-example/EZTextInputExample\";\nimport { BasicEZElementsExample } from \"./basic-ezelements/BasicEZElementsExample\";\n\nconst examples: { [key: string]: (holder: EZDiv) => void } = {\n  'Basic EZElements': BasicEZElementsExample,\n  'Button': ButtonExample,\n  'EZButton': EZButtonExample,\n  'EZButton Subclass': EZButtonSubclassExample,\n  'EZTextInput': EZTextInputExample,\n  'Shadow': ShadowExample,\n  'JSX': JSXExample,\n};\n\nlet buttonsHolder = ez('div').addStyles({\n  marginBottom: '10px',\n});\nlet exampleHolder = ez('div');\n\nfunction loadExample(exampleName: string) {\n  if (exampleName === '') {\n    exampleHolder.setTextContent('Pick an example');\n    return;\n  }\n\n  // Clear the example holder\n  exampleHolder.setTextContent('');\n  const example = examples[exampleName];\n  if (example) {\n    example(exampleHolder);\n  } else {\n    exampleHolder.setTextContent(`Example not found for \"${exampleName}\"`);\n  }\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  buttonsHolder.appendTo(document.body);\n  exampleHolder.appendTo(document.body);\n\n  for (let i in examples) {\n    ez('a')\n      .addStyles({\n        padding: '10px',\n        margin: '5px',\n      })\n      .setTextContent(i)\n      .setAttribute('href', `#${i}`)\n      .appendTo(buttonsHolder);\n  }\n\n  loadExample(decodeURIComponent(window.location.hash.substring(1)));\n});\n\nwindow.addEventListener('hashchange', () => {\n  loadExample(decodeURIComponent(window.location.hash.substring(1)));\n});\n"]}